-- Create admin user with the specified credentials
-- First insert the user role for Douglas (assuming user will sign up with this email)
-- This will be referenced once the user actually signs up

-- Note: User ID will be generated by Supabase Auth when user signs up
-- For now, we'll create a placeholder that can be updated once the user registers

INSERT INTO public.user_roles (user_id, role)
VALUES (
  '00000000-0000-0000-0000-000000000000', -- Placeholder UUID that will be updated
  'admin'
) ON CONFLICT (user_id, role) DO NOTHING;

-- Create a function to automatically assign admin role to specific email
CREATE OR REPLACE FUNCTION public.handle_new_admin_user()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
  -- Check if this is the admin email
  IF NEW.email = 'douglas@studiositebh.com.br' THEN
    -- Insert admin role for this user
    INSERT INTO public.user_roles (user_id, role)
    VALUES (NEW.id, 'admin')
    ON CONFLICT (user_id, role) DO NOTHING;
  END IF;
  
  RETURN NEW;
END;
$$;

-- Create trigger to automatically assign admin role when the specific user signs up
DROP TRIGGER IF EXISTS on_auth_user_created_admin ON auth.users;
CREATE TRIGGER on_auth_user_created_admin
  AFTER INSERT ON auth.users
  FOR EACH ROW
  EXECUTE FUNCTION public.handle_new_admin_user();